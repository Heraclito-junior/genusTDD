/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import genus.Funcoes;
import genus.Tipos.Venda;
import java.util.Locale;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author GilbertoSoares
 */
public class TelaConfirmacaoVenda extends javax.swing.JFrame {

    /**
     * Creates new form TelaConfirmacaoVenda
     */
    Venda venda;
    Funcoes funcoes;
    TelaVenda telaVenda;
    double valorPago;
    public static int idFuncionario;
    
    public TelaConfirmacaoVenda(Venda venda, TelaVenda telaVenda, int idFuncionario) {
        funcoes = new Funcoes();
        this.venda = venda;
        this.telaVenda = telaVenda;
        valorPago = 0;
        this.idFuncionario = idFuncionario;
        initComponents();
    }
    
    public TelaConfirmacaoVenda() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelConfirmacaoVenda = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaValorTotal = new javax.swing.JTextArea();
        labelDescontos = new javax.swing.JLabel();
        comboBoxDescontos1 = new javax.swing.JComboBox();
        textFieldModo1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboBoxDescontos2 = new javax.swing.JComboBox();
        comboBoxDescontos3 = new javax.swing.JComboBox();
        labelDescontos1 = new javax.swing.JLabel();
        labelDescontos2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textFieldModo2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textFieldModo3 = new javax.swing.JTextField();
        buttonRetornar = new javax.swing.JButton();
        buttonConfirmar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaValorPago = new javax.swing.JTextArea();
        radioButtonCliente = new javax.swing.JRadioButton();
        textFieldCPF = new javax.swing.JTextField();
        toggleButtonDesconto = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelConfirmacaoVenda.setFont(new java.awt.Font("Vijaya", 1, 36)); // NOI18N
        labelConfirmacaoVenda.setText("Confimação de venda");

        jLabel1.setText("Valor total:");

        textAreaValorTotal.setEditable(false);
        textAreaValorTotal.setColumns(8);
        textAreaValorTotal.setRows(1);
        textAreaValorTotal.setText("" + venda.getValorTotal());
        jScrollPane2.setViewportView(textAreaValorTotal);

        labelDescontos.setText("Modo de pagamento 1:");

        comboBoxDescontos1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        String descontosTotal = funcoes.listarDesconto();
        comboBoxDescontos1.removeAllItems();
        String descontosDivididos[] = descontosTotal.split(Pattern.quote("_-*7"));
        int quantidadeDesconto = descontosDivididos.length;
        for (int i = 0; i < quantidadeDesconto; i++) {
            comboBoxDescontos1.addItem(descontosDivididos[i]);
        }
        comboBoxDescontos1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxDescontos1ItemStateChanged(evt);
            }
        });

        textFieldModo1.setText("0.00");
        textFieldModo1.setEnabled(false);
        textFieldModo1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldModo1FocusLost(evt);
            }
        });

        jLabel2.setText("R$");

        comboBoxDescontos2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxDescontos2.removeAllItems();
        for (int i = 0; i < quantidadeDesconto; i++) {
            comboBoxDescontos2.addItem(descontosDivididos[i]);
        }
        comboBoxDescontos2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxDescontos2ItemStateChanged(evt);
            }
        });

        comboBoxDescontos3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxDescontos3.removeAllItems();
        for (int i = 0; i < quantidadeDesconto; i++) {
            comboBoxDescontos3.addItem(descontosDivididos[i]);
        }
        comboBoxDescontos3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxDescontos3ItemStateChanged(evt);
            }
        });

        labelDescontos1.setText("Modo de pagamento 2:");

        labelDescontos2.setText("Modo de pagamento 3:");

        jLabel3.setText("R$");

        textFieldModo2.setText("0.00");
        textFieldModo2.setEnabled(false);
        textFieldModo2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldModo2FocusLost(evt);
            }
        });

        jLabel4.setText("R$");

        textFieldModo3.setText("0.00");
        textFieldModo3.setEnabled(false);
        textFieldModo3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldModo3FocusLost(evt);
            }
        });

        buttonRetornar.setText("Retornar");
        buttonRetornar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRetornarActionPerformed(evt);
            }
        });

        buttonConfirmar.setText("Confirmar");
        buttonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmarActionPerformed(evt);
            }
        });

        jLabel5.setText("Valor pago:");

        jScrollPane1.setMinimumSize(new java.awt.Dimension(0, 16));

        textAreaValorPago.setEditable(false);
        textAreaValorPago.setColumns(8);
        textAreaValorPago.setRows(1);
        textAreaValorPago.setText("0.00");
        jScrollPane1.setViewportView(textAreaValorPago);

        radioButtonCliente.setText("Cliente (CPF):");
        radioButtonCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonClienteItemStateChanged(evt);
            }
        });

        textFieldCPF.setEnabled(false);

        toggleButtonDesconto.setText("Calcular desconto");
        toggleButtonDesconto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                toggleButtonDescontoItemStateChanged(evt);
            }
        });

        jLabel6.setText("R$");

        jLabel7.setText("R$");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelConfirmacaoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelDescontos)
                            .addComponent(labelDescontos1)
                            .addComponent(labelDescontos2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(comboBoxDescontos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textFieldModo1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(textFieldModo3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(textFieldModo2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(comboBoxDescontos2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxDescontos3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonRetornar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonConfirmar)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioButtonCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldCPF)
                                .addGap(54, 54, 54))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(7, 7, 7)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addGap(40, 40, 40))))
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(toggleButtonDesconto)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(labelConfirmacaoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButtonCliente)
                    .addComponent(textFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDescontos)
                    .addComponent(comboBoxDescontos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldModo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxDescontos2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDescontos1)
                    .addComponent(textFieldModo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxDescontos3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDescontos2)
                    .addComponent(textFieldModo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(toggleButtonDesconto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRetornar)
                    .addComponent(buttonConfirmar))
                .addGap(15, 15, 15))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonRetornarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRetornarActionPerformed
        // TODO add your handling code here:
        TelaVenda tela = telaVenda;
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_buttonRetornarActionPerformed

    private void comboBoxDescontos2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxDescontos2ItemStateChanged
        // TODO add your handling code here:
        if(comboBoxDescontos2.getSelectedItem().equals("nenhum")){
            textFieldModo2.setEditable(false);
            textFieldModo2.setText("");
        }
        if(!comboBoxDescontos2.getSelectedItem().equals("nenhum")){
            textFieldModo2.setEditable(true);
            if(textFieldModo2.getText().equals("")){
                textFieldModo2.setText("0.00");
            }
        }
    }//GEN-LAST:event_comboBoxDescontos2ItemStateChanged

    private void comboBoxDescontos3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxDescontos3ItemStateChanged
        // TODO add your handling code here:
        if(comboBoxDescontos3.getSelectedItem().equals("nenhum")){
            textFieldModo3.setEditable(false);
            textFieldModo3.setText("");
        }
        if(!comboBoxDescontos3.getSelectedItem().equals("nenhum")){
            textFieldModo3.setEditable(true);
            if(textFieldModo3.getText().equals("")){
                textFieldModo3.setText("0.00");
            }
        }
    }//GEN-LAST:event_comboBoxDescontos3ItemStateChanged

    private void comboBoxDescontos1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxDescontos1ItemStateChanged
        // TODO add your handling code here:
        if(comboBoxDescontos1.getSelectedItem().equals("nenhum")){
            textFieldModo1.setEditable(false);
            textFieldModo1.setText("");
        }
        if(!comboBoxDescontos1.getSelectedItem().equals("nenhum")){
            textFieldModo1.setEditable(true);
            if(textFieldModo1.getText().equals("")){
                textFieldModo1.setText("0.00");
            }
        }
    }//GEN-LAST:event_comboBoxDescontos1ItemStateChanged

    private void toggleButtonDescontoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_toggleButtonDescontoItemStateChanged
        // TODO add your handling code here:
        if(comboBoxDescontos1.isEnabled()){
            comboBoxDescontos1.setEnabled(false);
            comboBoxDescontos2.setEnabled(false);
            comboBoxDescontos3.setEnabled(false);
            comboBoxDescontos1.setFocusable(false);
            comboBoxDescontos2.setFocusable(false);
            comboBoxDescontos3.setFocusable(false);
            textFieldModo1.setEnabled(true);
            textFieldModo2.setEnabled(true);
            textFieldModo3.setEnabled(true);
        }
        else{
            comboBoxDescontos1.setEnabled(true);
            comboBoxDescontos2.setEnabled(true);
            comboBoxDescontos3.setEnabled(true);
        }
        
        double valorTotal = venda.getValorTotal();
        double valor1, valor2, valor3;
        String nome1, nome2, nome3;
        
        nome1 = "" + comboBoxDescontos1.getSelectedItem();
        valor1 = funcoes.converterValorComDesconto(valorTotal, nome1);
        
        nome2 = "" + comboBoxDescontos2.getSelectedItem();
        valor2 = funcoes.converterValorComDesconto(valorTotal, nome2);
        
        nome3 = "" + comboBoxDescontos3.getSelectedItem();
        valor3 = funcoes.converterValorComDesconto(valorTotal, nome3);
        
        String precoFinal;
        double precoAux = funcoes.getValorMaximo(valor1, valor2, valor3);
        precoAux = Math.round(precoAux * 100.0) / 100.0;
        precoFinal = String.format(Locale.US, "%.2f", precoAux);
        
        textAreaValorTotal.setText(precoFinal);
    }//GEN-LAST:event_toggleButtonDescontoItemStateChanged

    private void buttonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmarActionPerformed
        // TODO add your handling code here:
        double valorTotal;
        double valorPago;
        
        try {
            valorTotal = Double.parseDouble(textAreaValorTotal.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Erro ao confirmar pagamento!\n"
                    + "Valor total inválido.", "Erro ao confirmar pagamento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            valorPago = Double.parseDouble(textAreaValorPago.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Erro ao confirmar pagamento!\n"
                    + "Valor pago inválido.", "Erro ao confirmar pagamento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        long CPFcliente;
        int idVenda = venda.getIDvenda();
        String nome1 = "" + comboBoxDescontos1.getSelectedItem();
        String nome2 = "" + comboBoxDescontos2.getSelectedItem();
        String nome3 = "" + comboBoxDescontos3.getSelectedItem();
        String troco = String.format("%.2f", valorPago - valorTotal);
        
        if(valorTotal > valorPago){
            JOptionPane.showMessageDialog(this, "Erro ao concluir pagamento!\nO valor total da venda é maior que"
                    + " o valor pago pelo cliente", "Erro ao concluir pagamento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(!radioButtonCliente.isSelected()){
            if(valorTotal == valorPago){
                JOptionPane.showMessageDialog(this, "A venda foi concluída com"
                        + " sucesso!", "Venda concluída", JOptionPane.INFORMATION_MESSAGE);
            }

            if(valorTotal < valorPago){
                JOptionPane.showMessageDialog(this, "A venda foi concluída com"
                        + " sucesso!\nTroco do cliente: R$"
                        + troco, "Venda concluída", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        if(radioButtonCliente.isSelected()){
            
            try {
                CPFcliente = Long.parseLong(textFieldCPF.getText());
            }
            catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Erro ao confirmar pagamento!\n"
                        + "CPF inválido.", "Erro ao confirmar pagamento", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(!funcoes.existeCPF(CPFcliente)){
                JOptionPane.showMessageDialog(this, "Erro ao confirmar pagamento!\n"
                        + "Cliente não cadastrado.", "Erro ao confirmar pagamento", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            funcoes.atualizaVenda(idVenda, CPFcliente, venda.getValorTotal());
            
            
            if(funcoes.inserirPagamento(idVenda, venda.getValorTotal(), nome1, nome2, nome3)){
                TelaVendedor tela = new TelaVendedor(idFuncionario);
                tela.setVisible(true);
                dispose();
                funcoes.diminuirEstoque(idVenda);
                
                if(valorTotal == valorPago){
                    JOptionPane.showMessageDialog(this, "A venda foi concluída com"
                            + " sucesso!", "Venda concluída", JOptionPane.INFORMATION_MESSAGE);
                }

                if(valorTotal < valorPago){
                    JOptionPane.showMessageDialog(this, "A venda foi concluída com"
                            + " sucesso!\nTroco do cliente: R$"
                            + troco, "Venda concluída", JOptionPane.INFORMATION_MESSAGE);
                }
                
                return;
            }
            TelaVendedor tela = new TelaVendedor(idFuncionario);
            tela.setVisible(true);
            dispose();
            return;
        }
        
        funcoes.atualizaVendaSemCPF(idVenda, venda.getValorTotal());
        if(funcoes.inserirPagamento(idVenda, venda.getValorTotal(), nome1, nome2, nome3)){
            funcoes.diminuirEstoque(idVenda);
        }
        
        TelaVendedor tela = new TelaVendedor(idFuncionario);
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_buttonConfirmarActionPerformed

    private void textFieldModo1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldModo1FocusLost
        // TODO add your handling code here:
        
        double valorPago = 0;
        double valorParaAdicionar1;
        double valorParaAdicionar2;
        double valorParaAdicionar3;
        
        try {
            valorParaAdicionar1 = Double.parseDouble(textFieldModo1.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo1.setText("0.00");
            return;
        }
        
        try {
            valorParaAdicionar2 = Double.parseDouble(textFieldModo2.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo2.setText("0.00");
            return;
        }
        
        try {
            valorParaAdicionar3 = Double.parseDouble(textFieldModo3.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo3.setText("0.00");
            return;
        }
        
        if(valorParaAdicionar1 < 0){
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido (negativo)."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo1.setText("0.00");
            return;
        }
        
        if(valorParaAdicionar2 < 0){
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido (negativo)."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo2.setText("0.00");
            return;
        }
        
        if(valorParaAdicionar3 < 0){
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido (negativo)."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo3.setText("0.00");
            return;
        }
        
        if(!textFieldModo1.getText().equals("")){
            valorPago += valorParaAdicionar1;
        }
        if(!textFieldModo2.getText().equals("")){
            valorPago += valorParaAdicionar2;
        }
        if(!textFieldModo3.getText().equals("")){
            valorPago += valorParaAdicionar3;
        }
        
        valorPago = Math.round(valorPago * 100.0) / 100.0;
        textAreaValorPago.setText("" + valorPago);
    }//GEN-LAST:event_textFieldModo1FocusLost

    private void textFieldModo2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldModo2FocusLost
        // TODO add your handling code here:
        double valorPago = 0;
        double valorParaAdicionar1;
        double valorParaAdicionar2;
        double valorParaAdicionar3;
        
        try {
            valorParaAdicionar1 = Double.parseDouble(textFieldModo1.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo1.setText("0.00");
            return;
        }
        
        try {
            valorParaAdicionar2 = Double.parseDouble(textFieldModo2.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo2.setText("0.00");
            return;
        }
        
        try {
            valorParaAdicionar3 = Double.parseDouble(textFieldModo3.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo3.setText("0.00");
            return;
        }
        
        if(valorParaAdicionar1 < 0){
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido (negativo)."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo1.setText("0.00");
            return;
        }
        
        if(valorParaAdicionar2 < 0){
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido (negativo)."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo2.setText("0.00");
            return;
        }
        
        if(valorParaAdicionar3 < 0){
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido (negativo)."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo3.setText("0.00");
            return;
        }
        
        if(!textFieldModo1.getText().equals("")){
            valorPago += valorParaAdicionar1;
        }
        if(!textFieldModo2.getText().equals("")){
            valorPago += valorParaAdicionar2;
        }
        if(!textFieldModo3.getText().equals("")){
            valorPago += valorParaAdicionar3;
        }
        
        valorPago = Math.round(valorPago * 100.0) / 100.0;
        textAreaValorPago.setText("" + valorPago);
    }//GEN-LAST:event_textFieldModo2FocusLost

    private void textFieldModo3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldModo3FocusLost
        // TODO add your handling code here:
        double valorPago = 0;
        double valorParaAdicionar1;
        double valorParaAdicionar2;
        double valorParaAdicionar3;
        
        try {
            valorParaAdicionar1 = Double.parseDouble(textFieldModo1.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo1.setText("0.00");
            return;
        }
        
        try {
            valorParaAdicionar2 = Double.parseDouble(textFieldModo2.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo2.setText("0.00");
            return;
        }
        
        try {
            valorParaAdicionar3 = Double.parseDouble(textFieldModo3.getText());
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo3.setText("0.00");
            return;
        }
        
        if(valorParaAdicionar1 < 0){
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido (negativo)."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo1.setText("0.00");
            return;
        }
        
        if(valorParaAdicionar2 < 0){
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido (negativo)."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo2.setText("0.00");
            return;
        }
        
        if(valorParaAdicionar3 < 0){
            JOptionPane.showMessageDialog(this, "O valor inserido é inválido (negativo)."
                    , "Atenção", JOptionPane.INFORMATION_MESSAGE);
            textFieldModo3.setText("0.00");
            return;
        }
        
        if(!textFieldModo1.getText().equals("")){
            valorPago += valorParaAdicionar1;
        }
        if(!textFieldModo2.getText().equals("")){
            valorPago += valorParaAdicionar2;
        }
        if(!textFieldModo3.getText().equals("")){
            valorPago += valorParaAdicionar3;
        }
        
        valorPago = Math.round(valorPago * 100.0) / 100.0;
        textAreaValorPago.setText("" + valorPago);
    }//GEN-LAST:event_textFieldModo3FocusLost

    private void radioButtonClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioButtonClienteItemStateChanged
        // TODO add your handling code here:
        
        if(textFieldCPF.isEnabled()){
            textFieldCPF.setEnabled(false);
        }
        if(!textFieldCPF.isEnabled()){
            textFieldCPF.setEnabled(true);
        }
    }//GEN-LAST:event_radioButtonClienteItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConfirmacaoVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConfirmacaoVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConfirmacaoVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConfirmacaoVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConfirmacaoVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonConfirmar;
    private javax.swing.JButton buttonRetornar;
    private javax.swing.JComboBox comboBoxDescontos1;
    private javax.swing.JComboBox comboBoxDescontos2;
    private javax.swing.JComboBox comboBoxDescontos3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelConfirmacaoVenda;
    private javax.swing.JLabel labelDescontos;
    private javax.swing.JLabel labelDescontos1;
    private javax.swing.JLabel labelDescontos2;
    private javax.swing.JRadioButton radioButtonCliente;
    private javax.swing.JTextArea textAreaValorPago;
    private javax.swing.JTextArea textAreaValorTotal;
    private javax.swing.JTextField textFieldCPF;
    private javax.swing.JTextField textFieldModo1;
    private javax.swing.JTextField textFieldModo2;
    private javax.swing.JTextField textFieldModo3;
    private javax.swing.JToggleButton toggleButtonDesconto;
    // End of variables declaration//GEN-END:variables
}
